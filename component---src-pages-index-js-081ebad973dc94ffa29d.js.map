{"version":3,"file":"component---src-pages-index-js-081ebad973dc94ffa29d.js","mappings":"+JACO,I,8BCIMA,EAAgB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC9B,OACE,uBAAKC,UDNkB,+CCOpBD,EAAME,KAAI,SAAAC,GACT,IAAMC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAC9CC,GAAaC,EAAAA,EAAAA,GAASN,EAAKE,YAAYG,YAE7C,OACE,gBAAC,EAAAE,KAAD,CAAMC,GAAIR,EAAKG,OAAOC,KAAMK,SAAS,MAAMC,IAAKV,EAAKG,OAAOC,MAC1D,uBAAKN,UDXK,0CCYR,gBAAC,EAAAa,EAAD,CAAab,UDXJ,0CCWiCc,MAAOP,IACjD,sBAAIP,UDdC,uCCcyBG,W,oGCkC5C,EAtCY,WAAO,IAAD,EAeVY,EAAM,WAdCC,EAAAA,EAAAA,gBAAe,cAcRC,KAAKC,oBAAb,aAAG,EAAwBH,OAEvC,OACE,uBAAKf,UC7BQ,0BD8BX,6BACE,gBAAC,EAAAmB,EAAD,CACEnB,UC9BU,4BD+BVoB,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,OAAQ,IACRC,QAAS,GACTC,IAAKV,MAAAA,OAAF,EAAEA,EAAQW,KAPf,uBAUF,2BACE,qBAAG1B,UCzCW,+BDyCd,wBACA,0BAAIe,MAAAA,OAAA,EAAAA,EAAQY,UAAW,S,8BEP/B,EA5BkB,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKX,KAAKC,oBAAV,eAAwBf,QAAxB,uBACZJ,EAAQ6B,EAAKG,kBAAkBC,MAErC,OAAqB,IAAjBjC,EAAMkC,OAEN,gBAAC,IAAD,CAAQJ,SAAUA,GAChB,gBAAC,IAAD,CAAK1B,MAAO2B,IACZ,gBAAC,EAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQD,SAAUA,EAAU1B,MAAO2B,EAAWI,KAAK,QACjD,gBAAC,IAAD,CAAK/B,MAAM,cACX,gBAAC,EAAD,MACA,qBAAGH,UC9BgB,oCD8BnB,sBACA,gBAAC,IAAD,CAAeD,MAAOA,O","sources":["webpack://gatsby-starter-blog/./src/components/portfolio-grid.module.css","webpack://gatsby-starter-blog/./src/components/portfolio-grid.js","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/bio.module.css","webpack://gatsby-starter-blog/./src/pages/index.js","webpack://gatsby-starter-blog/./src/pages/styles/index.module.css"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var gridContainer = \"portfolio-grid-module--gridContainer--A0d+q\";\nexport var title = \"portfolio-grid-module--title--W-a2a\";\nexport var gridItem = \"portfolio-grid-module--gridItem--jLo3i\";\nexport var thumbnail = \"portfolio-grid-module--thumbnail--iENXv\";","import * as styles from \"./portfolio-grid.module.css\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { Link } from \"gatsby\"\nimport * as React from \"react\"\n\nexport const PortfolioGrid = ({ posts }) => {\n  return (\n    <div className={styles.gridContainer}>\n      {posts.map(post => {\n        const title = post.frontmatter.title || post.fields.slug\n        const thumbImage = getImage(post.frontmatter.thumbImage)\n\n        return (\n          <Link to={post.fields.slug} itemProp=\"url\" key={post.fields.slug}>\n            <div className={styles.gridItem}>\n              <GatsbyImage className={styles.thumbnail} image={thumbImage}/>\n              <h4 className={styles.title}>{title}</h4>\n            </div>\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport * as styles from \"./bio.module.css\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name,\n            summary\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className={styles.bio}>\n      <aside>\n        <StaticImage\n          className={styles.avatar}\n          layout=\"fixed\"\n          formats={[\"auto\", \"webp\", \"avif\"]}\n          src=\"../images/profile-pic.png\"\n          height={125}\n          quality={95}\n          alt={author?.name}\n        />\n      </aside>\n      <div>\n        <p className={styles.headline}>Visual Communication</p>\n        <p>{author?.summary || null}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","// extracted by mini-css-extract-plugin\nexport var bio = \"bio-module--bio--fDHiL\";\nexport var headline = \"bio-module--headline--A2BLm\";\nexport var avatar = \"bio-module--avatar--5U6+D\";","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport * as styles from \"./styles/index.module.css\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { PortfolioGrid } from \"../components/portfolio-grid\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Anna Vital's website`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location}>\n        <Seo title={siteTitle} />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle} type=\"full\">\n      <Seo title=\"All posts\" />\n      <Bio />\n      <p className={styles.subHeadline}>My selected works:</p>\n      <PortfolioGrid posts={posts} />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          thumbImage {\n            childImageSharp {\n              gatsbyImageData(layout:FIXED, width: 350, aspectRatio: 1)\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nexport var subHeadline = \"index-module--subHeadline--sO8G8\";"],"names":["PortfolioGrid","posts","className","map","post","title","frontmatter","fields","slug","thumbImage","getImage","Link","to","itemProp","key","G","image","author","useStaticQuery","site","siteMetadata","S","layout","formats","src","height","quality","alt","name","summary","data","location","siteTitle","allMarkdownRemark","nodes","length","type"],"sourceRoot":""}